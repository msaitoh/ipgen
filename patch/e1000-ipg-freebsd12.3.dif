diff --git a/sys/dev/e1000/if_em.c b/sys/dev/e1000/if_em.c
index b542860b4a9..3dc0bab388a 100644
--- a/sys/dev/e1000/if_em.c
+++ b/sys/dev/e1000/if_em.c
@@ -337,6 +337,7 @@ static void	em_enable_vectors_82574(if_ctx_t);
 
 static int	em_set_flowcntl(SYSCTL_HANDLER_ARGS);
 static int	em_sysctl_eee(SYSCTL_HANDLER_ARGS);
+static int	em_sysctl_tipg(SYSCTL_HANDLER_ARGS);
 static void	em_if_led_func(if_ctx_t, int);
 
 static int	em_get_regs(SYSCTL_HANDLER_ARGS);
@@ -1057,6 +1058,11 @@ em_if_attach_pre(if_ctx_t ctx)
 	    CTLTYPE_INT | CTLFLAG_RW, sc, 0,
 	    em_sysctl_eee, "I", "Disable Energy Efficient Ethernet");
 
+	SYSCTL_ADD_PROC(ctx_list, child, OID_AUTO, "tipg",
+	    CTLTYPE_INT | CTLFLAG_RW,
+	    sc, 0, em_sysctl_tipg, "I",
+	    "Transmit IPG register");
+
 	/*
 	** Start from a known state, this is
 	** important in reading the nvm and
@@ -4768,6 +4774,26 @@ em_sysctl_eee(SYSCTL_HANDLER_ARGS)
 	return (0);
 }
 
+static int
+em_sysctl_tipg(SYSCTL_HANDLER_ARGS)
+{
+	struct e1000_softc *sc = (struct e1000_softc *)arg1;
+	int error, value;
+	u32 reg;
+
+	value = E1000_READ_REG(&sc->hw, E1000_TIPG) & E1000_TIPG_IPGT_MASK;
+	error = sysctl_handle_int(oidp, &value, 0, req);
+	if (error || req->newptr == NULL)
+		return (error);
+
+	reg = E1000_READ_REG(&sc->hw, E1000_TIPG);
+	reg &= ~E1000_TIPG_IPGT_MASK;
+	reg |= value & E1000_TIPG_IPGT_MASK;
+	E1000_WRITE_REG(&sc->hw, E1000_TIPG, reg);
+
+	return (0);
+}
+
 static int
 em_sysctl_debug_info(SYSCTL_HANDLER_ARGS)
 {
